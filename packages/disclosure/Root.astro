---
import Context from "@astro-aria/context";
import id from "@astro-aria/id";
import Trim from "@astro-aria/trim";

type Props = {
  open?: boolean;
  [x: string]: any;
};

const { open, ...attributes } = Astro.props;

const dictionary = {
  id: id(),
  open: open || false,
};
---

<Trim>
  <Context
    dictionary={dictionary}
    attributes={{
      "data-state": ["active", "inactive"],
      hidden: [false, true],
    }}
  >
    <astro-disclosure data-props={[dictionary.id, dictionary.open ? "" : "1"]} {...attributes}>
      <slot />
    </astro-disclosure>
  </Context>
</Trim>

<script>
  function AstroDisclosure(root: HTMLElement) {
    const [id, open] = root.dataset.props!.split(",");

    const trigger = root.querySelector<HTMLElement>(`[id="trigger:${id}"]`);
    const content = root.querySelector<HTMLElement>(`[id="content:${id}"]`);

    if (trigger && content) {
      let isOpen = !open;
      trigger.addEventListener("click", () => {
        isOpen = !isOpen;
        trigger.dataset.state = isOpen ? "active" : "inactive";
        content.dataset.state = isOpen ? "active" : "inactive";
        trigger.setAttribute("aria-expanded", isOpen ? "true" : "false");
        content.hidden = !isOpen;
      });
    }
  }

  document.querySelectorAll<HTMLElement>("astro-disclosure").forEach(AstroDisclosure);
</script>
